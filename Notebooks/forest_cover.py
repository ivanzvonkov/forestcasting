# -*- coding: utf-8 -*-
"""forest_cover.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1VWBTcHbA_e7WuodYZM3GTCSH-pOI4vVV

# Creating narrowed down grid
Uses forest cover to create a narrowed grid.
"""

# Install imports
!pip install geopandas

# Imports
import pandas as pd
import numpy as np
import geopandas as gpd
import io
from geopandas import GeoDataFrame
from shapely.geometry import Point, box
from google.colab import files, drive
from pyproj import Proj, transform
import zipfile

# Mount Google Drive
drive.mount('/content/gdrive')

# Set root path, will be different for everyone
root_path = '/content/gdrive/My Drive/U - SE 4455 Software Design/Capstone Public Folder/Data/'
offset = 0.2

required_files = [
  'Canvec Land/wooded_area.zip',
  'World Shapefile/World_Shapefile.zip',
  'Alberta Location /alberta_grid_system.zip'
]

for local_path in required_files:
  file_path = root_path + local_path
  with zipfile.ZipFile(file_path,"r") as zip_ref:
    zip_ref.extractall('.')

world = gpd.read_file('World_Shapefile/ne_10m_admin_0_countries.shp')
canada = world[world['SOVEREIGNT'] == 'Canada']

wooded_area = gpd.read_file('wooded_area_2.shp')
wooded_area.head()

grid = pd.read_csv('alberta_grid_system.csv')
grid.head()

base = canada.plot(figsize=(10,10))
base.set_xlim(-123, -107.5) 
base.set_ylim(48, 63)
wooded_area.plot(
    ax=base, 
    color='yellow', 
    markersize=5);

# Setting to convert projections
inProj = Proj(init='epsg:3857')
outProj = Proj(init='epsg:4617')

# Set up grid geometry
def set_shape(row):
    x,y = row.LONGITUDE, row.LATITUDE
    return box(x,y,x+offset,y+offset) 
    
grid['box'] = grid.apply(lambda row: set_shape(row), axis=1)
box_gdf = GeoDataFrame(grid, geometry=grid['box'])

box_gdf.head()

for index, box in box_gdf.iterrows():
    box_gdf.at[index,'wooded'] = 0
    for index2, wood in wooded_area.iterrows():
        if box['geometry'].intersects(wood['geometry']):
            box_gdf.at[index,'wooded'] = 1
            break

box_gdf.head()

base = canada.plot(figsize=(10,10))
base.set_xlim(-123, -107.5) 
base.set_ylim(48, 61)
base = box_gdf[box_gdf['wooded'] == 0].plot(
    ax=base, 
    edgecolor='white', 
    markersize=5);

box_gdf[box_gdf['wooded'] == 1].plot(
    ax=base, 
    edgecolor='white', 
    color='yellow',
    markersize=5);

box_gdf.to_csv('AL_grid_wooded.csv')

files.download('AL_grid_wooded.csv')

base = canada.plot(figsize=(10,10))
base.set_xlim(-123, -107.5) 
base.set_ylim(48, 61)
base = wooded_area.plot(
    ax=base, 
    figsize=(10,10),
    color='yellow', 
    markersize=5);

box_gdf.plot(
    ax=base, 
    fc=(0,0,0,0),
    edgecolor='black', 
    markersize=5);

figsize=(10,10),grid_wooded_file = files.upload()

box_gdf = pd.read_csv(io.StringIO(grid_wooded_file['AL_grid_wooded.csv'].decode('utf-8')))
usefulness_grid = box_gdf.drop(['box', 'geometry'], axis=1)
usefulness_grid.head()

usefulness_grid.to_csv('AL_location_grid_wooded.csv')

files.download('AL_location_grid_wooded.csv')