# -*- coding: utf-8 -*-
"""2f-mapping_grid_to_eco.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1sHDA9RuBDSYdS5i2GAEGMVnV1QFri0ZR
"""

from osgeo import ogr
from google.colab import files, drive
import pandas as pd
import numpy as np

drive.mount('/content/gdrive')
root_path = '/content/gdrive/My Drive/Capstone Public Folder/Data/EcoData/'

def getLatLongFromShp(file, columns, ecoIndex):
  lyr = file.GetLayerByIndex(0)
  lyr.ResetReading()
  arr = []

  for feat in lyr:
      ecoNumber = feat.GetField(ecoIndex)
      # get bounding coords in minx, maxx, miny, maxy format
      env = feat.GetGeometryRef().GetEnvelope()
      # get bounding coords in miny, minx, maxy, maxx format
      bbox = [ecoNumber, env[0], env[2], env[1], env[3]]
      arr.append(bbox)

  df = pd.DataFrame(arr, columns = columns)
  return(df)

file = ogr.Open(root_path + "Ecozones/ecozones.shp")
columns = ["Ecozone", "miny", "minx", "maxy", "maxx"]

ecoZonesDf = getLatLongFromShp(file, columns, 4)

print(ecoZonesDf)

file = ogr.Open(root_path + "Ecoregions/ecoregions.shp")
columns = ["Ecoregion", "miny", "minx", "maxy", "maxx"]

ecoRegionsDF = getLatLongFromShp(file, columns, 4)

print(ecoRegionsDF)

file = ogr.Open(root_path + "Ecodistricts/ecodistricts.shp")
columns = ["Ecodistrict", "miny", "minx", "maxy", "maxx"]

ecoDistrictDF = getLatLongFromShp(file, columns, 4)

print(ecoDistrictDF)

def checkRange(minx, maxx, miny, maxy, lat, longitude):
  if (lat >= minx) and (lat <= maxx) and (longitude <= maxy):
      return True
  return False

def getEcoZone(latitude, longitude):
  for index, zone in ecoZonesDf.iterrows():
    found = checkRange(zone['minx'], zone['maxx'], zone['miny'], zone['maxy'], latitude, longitude)

    if found:
      return int(zone['Ecozone'])

  return 0

def getEcoRegion(latitude, longitude):
  for index, zone in ecoRegionsDF.iterrows():
    found = checkRange(zone['minx'], zone['maxx'], zone['miny'], zone['maxy'], latitude, longitude)
    
    if found:
      return int(zone['Ecoregion'])
  return 0

def getEcoDistrict(latitude, longitude):
  for index, zone in ecoDistrictDF.iterrows():
    found = checkRange(zone['minx'], zone['maxx'], zone['miny'], zone['maxy'], latitude, longitude)
    
    if found:
      return int(zone['Ecodistrict'])
  return 0

root_path = '/content/gdrive/My Drive/Capstone Public Folder/Data/Colab Data/'
al_data = pd.read_csv(root_path+"alberta_grid_system.zip", compression='zip')

al_data['ECOZONE'] = al_data.apply(lambda x: getEcoZone(x['LATITUDE'],x['LONGITUDE']), axis = 1)

al_data['ECOREGION'] = al_data.apply(lambda x: getEcoRegion(x['LATITUDE'], x['LONGITUDE']), axis = 1)

al_data['ECODISTRICT'] = al_data.apply(lambda x: getEcoDistrict(x['LATITUDE'], x['LONGITUDE']), axis = 1)

print(al_data)

al_data.to_csv(root_path + "AL_data_with_eco.csv.gz", compression= 'gzip', index = False)